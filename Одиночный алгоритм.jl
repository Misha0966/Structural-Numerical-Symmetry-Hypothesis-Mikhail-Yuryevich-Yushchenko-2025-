using Printf  # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @printf)
# –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–±–∏–≤–∞–µ—Ç —á–∏—Å–ª–æ N –∫–∞–∫ —Å—Ç—Ä–æ–∫—É –Ω–∞ m —á–∞—Å—Ç–µ–π 
function split_number_str(N::String, m::Integer)
len = length(N) # –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ N
base_len = div(len, m) # –ë–∞–∑–æ–≤–∞—è –¥–ª–∏–Ω–∞ –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ m
remainder = len % m # –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –¥–ª–∏–Ω—ã N –Ω–∞ m

parts = String[] # –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Å—Ç–µ–π
idx = 1 # –¢–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –Ω–∞—á–∞–ª–∞ —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏

for i in 1:m  # –¶–∏–∫–ª –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —á–∞—Å—Ç–µ–π
current_len = base_len + (i <= remainder ? 1 : 0)  # –î–æ–±–∞–≤–ª—è–µ–º +1 –∫ –¥–ª–∏–Ω–µ –ø–µ—Ä–≤—ã–º "remainder" —á–∞—Å—Ç—è–º
push!(parts, N[idx:idx+current_len-1]) # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —á–∞—Å—Ç–µ–π
idx += current_len # –°–¥–≤–∏–≥–∞–µ–º –∏–Ω–¥–µ–∫—Å –Ω–∞ –Ω–∞—á–∞–ª–æ —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏
end

return parts # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —á–∞—Å—Ç–µ–π
end

# –£–º–Ω–æ–∂–∞–µ—Ç —á–∞—Å—Ç—å —á–∏—Å–ª–∞, —Å–æ—Ö—Ä–∞–Ω—è—è –¥–ª–∏–Ω—É
function multiply_preserve_length(part::String, k::Integer)
num = parse(BigInt, part) * k  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ BigInt –∏ —É–º–Ω–æ–∂–∞–µ–º –Ω–∞ k
result = string(num)  # –û–±—Ä–∞—Ç–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É

# –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ—Ä–æ—á–µ –∏—Å—Ö–æ–¥–Ω–æ–π —á–∞—Å—Ç–∏ ‚Äî –¥–æ–ø–æ–ª–Ω—è–µ–º –Ω—É–ª—è–º–∏ —Å–ª–µ–≤–∞
return lpad(result, max(length(part), length(result)), '0')
end

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–ø–æ—Ç–µ–∑—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞
function check_full_match_for_one_number(N::BigInt, m::Integer, k::Integer)
N_str = string(N)                         # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º N –≤ —Å—Ç—Ä–æ–∫—É
    is_full_match = pq_str == nk_str          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–∞—é—Ç –ª–∏ PQ –∏ NK

    @printf("üî¢ N = %s\n", N_str)             # –í—ã–≤–æ–¥–∏–º N
    @printf("üìê m = %d\n", m)                  # –í—ã–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–µ–π
    @printf("üßÆ k = %d\n", k)                  # –í—ã–≤–æ–¥–∏–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è

    if is_full_match                          # –ï—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç:
        @printf("üõ† –†–∞–∑–±–∏–µ–Ω–∏–µ:\n")
        for (i, part) in enumerate(parts)     # –ü–µ—Ä–µ—á–∏—Å–ª—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏
            @printf("   –ß–∞—Å—Ç—å %d: \"%s\"\n", i, part)
        end
        @printf("‚û°Ô∏è –£–º–Ω–æ–∂–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏:\n")
        for (i, part) in enumerate(pq_parts)  # –ü–µ—Ä–µ—á–∏—Å–ª—è–µ–º —É–º–Ω–æ–∂–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏
            @printf("   –ß–∞—Å—Ç—å %d: \"%s\"\n", i, part)
        end
        @printf("üìå PQ = %s\n", pq_str)
        @printf("üìå NK = %s\n", nk_str)
        @printf("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ü–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ!\n")

        filename = "full_match_N$(N_str[1:min(50, length(N_str))]...)_m$m.txt"  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞

        open(filename, "w") do io             # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –Ω–∞ –∑–∞–ø–∏—Å—å
            write(io, "üìä –ì–∏–ø–æ—Ç–µ–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–π —á–∏—Å–ª–æ–≤–æ–π —Å–∏–º–º–µ—Ç—Ä–∏–∏\n")
            write(io, "=========================================\n")
            write(io, "üî¢ N = $N_str\n")
            write(io, "üìê m = $m\n")
            write(io, "üßÆ k = $k\n")
            write(io, "-----------------------------------------\n")
            write(io, "üõ† –†–∞–∑–±–∏–µ–Ω–∏–µ:\n")
            for (i, part) in enumerate(parts)
                write(io, "   –ß–∞—Å—Ç—å $i: \"$part\", –¥–ª–∏–Ω–∞: $(length(part))\n")
            end
            write(io, "‚û°Ô∏è –£–º–Ω–æ–∂–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏:\n")
            for (i, part) in enumerate(pq_parts)
                write(io, "   –ß–∞—Å—Ç—å $i: \"$part\", –¥–ª–∏–Ω–∞: $(length(part))\n")
            end
            write(io, "üìå PQ = $pq_str\n")
            write(io, "üìå NK = $nk_str\n")
            write(io, "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ü–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ.\n")
            write(io, "=========================================\n")
        end

println("\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: $filename")
else # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è:
@printf("‚ùå –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–±–∏–µ–Ω–∏—è.\n")
end

return ( # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
N = N,
m = m,
k = k,
PQ = pq_str,
NK = nk_str,
result = is_full_match ? "–ü–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ" : "–ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è"
    )
end

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–∞–∑–¥–µ–ª
# –ü—Ä–∏–º–µ—Ä: N = 99^99999 –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ
println("üîÑ –í—ã—á–∏—Å–ª—è–µ–º N = 99^99999...")
N_bigint = big"99"^big"99999"
m = 2 # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–µ–π
k = 3 # k ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ

# –ó–∞–ø—É—Å–∫
check_full_match_for_one_number(N_bigint, m, k)  # –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É